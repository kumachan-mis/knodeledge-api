openapi: 3.1.0
info:
  version: 0.1.0
  title: Web API of kNODEledge
  description: App to Create Graphically-Summarized Notes in Three Steps
paths:
  /api/projects/list:
    post:
      tags:
        - Projects
      operationId: projects-list
      summary: Get list of projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectListRequest'
      responses:
        '200':
          description: OK - Returns list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListErrorResponse'
        '500':
          description: Internal Server Error - Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
  /api/projects/find:
    post:
      tags:
        - Projects
      operationId: projects-find
      summary: Find project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFindRequest'
      responses:
        '200':
          description: OK - Returns found project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFindResponse'
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFindErrorResponse'
        '404':
          description: Not Found - Project not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFindErrorResponse'
        '500':
          description: Internal Server Error - Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
  /api/projects/create:
    post:
      tags:
        - Projects
      operationId: projects-create
      summary: Create new project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
      responses:
        '201':
          description: Created - Returns newly created project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateResponse'
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreateErrorResponse'
        '500':
          description: Internal Server Error - Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
  /api/projects/update:
    post:
      tags:
        - Projects
      operationId: projects-update
      summary: Update project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateRequest'
      responses:
        '200':
          description: OK - Returns updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdateResponse'
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdateErrorResponse'
        '404':
          description: Not Found - Project not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdateErrorResponse'
        '500':
          description: Internal Server Error - Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
  /api/chapters/list:
    post:
      tags:
        - Chapters
      operationId: chapters-list
      summary: Get list of chapters for a project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChapterListRequest'
      responses:
        '200':
          description: OK - Returns list of chapters for a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterListResponse'
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterListErrorResponse'
        '500':
          description: Internal Server Error - Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorResponse'
components:
  schemas:
    UserOnlyId:
      type: object
      description: User object with only ID
      properties:
        id:
          type: string
          description: User ID
          example: auth0|65a3d656ca600978b0f9501b
      required:
        - id
    ProjectListRequest:
      type: object
      description: Request Body for Project List API
      properties:
        user:
          $ref: '#/components/schemas/UserOnlyId'
      required:
        - user
    Project:
      type: object
      description: Project object
      properties:
        id:
          type: string
          description: Auto-generated project ID
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          maxLength: 100
          description: Project name
          example: My Project
        description:
          type: string
          maxLength: 400
          description: Project description
          example: This is my project
      required:
        - id
        - name
    ProjectListResponse:
      type: object
      description: Response Body for Project List API
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      required:
        - projects
    UserOnlyIdError:
      type: object
      description: Error Message for UserOnlyId object
      properties:
        id:
          type: string
          description: Error message for user ID
          example: user id is required, but got ''
    ProjectListErrorResponse:
      type: object
      description: Error Response Body for Project List API
      properties:
        message:
          type: string
          description: Error message when request body format is invalid
          example: unexpected EOF
        user:
          $ref: '#/components/schemas/UserOnlyIdError'
    ApplicationErrorResponse:
      type: object
      description: Common error response for application
      properties:
        message:
          type: string
          description: Error message
          example: unexpected EOF
      required:
        - message
    ProjectOnlyId:
      type: object
      description: Project object with only ID
      properties:
        id:
          type: string
          description: Auto-generated project ID
          example: 123e4567-e89b-12d3-a456-426614174000
      required:
        - id
    ProjectFindRequest:
      type: object
      description: Request Body for Project Find API
      properties:
        user:
          $ref: '#/components/schemas/UserOnlyId'
        project:
          $ref: '#/components/schemas/ProjectOnlyId'
      required:
        - user
        - project
    ProjectFindResponse:
      type: object
      description: Response Body for Project Find API
      properties:
        project:
          $ref: '#/components/schemas/Project'
      required:
        - project
    ProjectOnlyIdError:
      type: object
      description: Error Message for ProjectOnlyId object
      properties:
        id:
          type: string
          description: Error message for project ID
          example: project id is required, but got ''
    ProjectFindErrorResponse:
      type: object
      description: Error Response Body for Project Find API
      properties:
        message:
          type: string
          description: Error message when request body format is invalid
          example: unexpected EOF
        user:
          $ref: '#/components/schemas/UserOnlyIdError'
        project:
          $ref: '#/components/schemas/ProjectOnlyIdError'
    ProjectWithoutAutofield:
      type: object
      description: Project object without auto-generated fields
      properties:
        name:
          type: string
          maxLength: 100
          description: Project name
          example: My Project
        description:
          type: string
          maxLength: 400
          description: Project description
          example: This is my project
      required:
        - name
    ProjectCreateRequest:
      type: object
      description: Request Body for Project Create API
      properties:
        user:
          $ref: '#/components/schemas/UserOnlyId'
        project:
          $ref: '#/components/schemas/ProjectWithoutAutofield'
      required:
        - user
        - project
    ProjectCreateResponse:
      type: object
      description: Response Body for Project Create API
      properties:
        project:
          $ref: '#/components/schemas/Project'
      required:
        - project
    ProjectWithoutAutofieldError:
      type: object
      description: Error Message for ProjectWithoutAutofield object
      properties:
        name:
          type: string
          description: Error message for project name
          example: project name is required, but got ''
        description:
          type: string
          description: Error message for project description
          example: project description must be less than or equal to 400 characters
    ProjectCreateErrorResponse:
      type: object
      description: Error Response Body for Project Create API
      properties:
        message:
          type: string
          description: Error message when request body format is invalid
          example: unexpected EOF
        user:
          $ref: '#/components/schemas/UserOnlyIdError'
        project:
          $ref: '#/components/schemas/ProjectWithoutAutofieldError'
    ProjectUpdateRequest:
      type: object
      description: Request Body for Project Update API
      properties:
        user:
          $ref: '#/components/schemas/UserOnlyId'
        project:
          $ref: '#/components/schemas/Project'
      required:
        - user
        - project
    ProjectUpdateResponse:
      type: object
      description: Response Body for Project Update API
      properties:
        project:
          $ref: '#/components/schemas/Project'
      required:
        - project
    ProjectError:
      type: object
      description: Error Message for Project object
      properties:
        id:
          type: string
          description: Error message for project id
          example: project id is required, but got ''
        name:
          type: string
          description: Error message for project name
          example: project name is required, but got ''
        description:
          type: string
          description: Error message for project description
          example: project description must be less than or equal to 400 characters
    ProjectUpdateErrorResponse:
      type: object
      description: Error Response Body for Project Update API
      properties:
        message:
          type: string
          description: Error message when request body format is invalid
          example: unexpected EOF
        user:
          $ref: '#/components/schemas/UserOnlyIdError'
        project:
          $ref: '#/components/schemas/ProjectError'
    ChapterListRequest:
      type: object
      description: Request Body for Chapter List API
      properties:
        user:
          $ref: '#/components/schemas/UserOnlyId'
        project:
          $ref: '#/components/schemas/ProjectOnlyId'
      required:
        - user
        - project
    Section:
      type: object
      description: Section object
      properties:
        id:
          type: string
          description: Auto-generated section ID
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          maxLength: 100
          description: Section name
          example: Overview
      required:
        - id
        - name
    Chapter:
      type: object
      description: Chapter object
      properties:
        id:
          type: string
          description: Auto-generated chapter ID
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          maxLength: 100
          description: Chapter name
          example: Introduction
        number:
          type: integer
          minimum: 1
          description: Chapter number
          example: 1
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
      required:
        - id
        - name
        - number
    ChapterListResponse:
      type: object
      description: Response Body for Chapter List API
      properties:
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/Chapter'
      required:
        - chapters
    ChapterListErrorResponse:
      type: object
      description: Error Response Body for Chapter List API
      properties:
        message:
          type: string
          description: Error message when request body format is invalid
          example: unexpected EOF
        user:
          $ref: '#/components/schemas/UserOnlyIdError'
        project:
          $ref: '#/components/schemas/ProjectOnlyIdError'
